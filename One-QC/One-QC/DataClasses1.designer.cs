#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace One_QC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SQL_OneQC")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQCAssumption_TM(QCAssumption_TM instance);
    partial void UpdateQCAssumption_TM(QCAssumption_TM instance);
    partial void DeleteQCAssumption_TM(QCAssumption_TM instance);
    partial void InsertQCBackUpRecovery_TM(QCBackUpRecovery_TM instance);
    partial void UpdateQCBackUpRecovery_TM(QCBackUpRecovery_TM instance);
    partial void DeleteQCBackUpRecovery_TM(QCBackUpRecovery_TM instance);
    partial void InsertQCVesion_TM(QCVesion_TM instance);
    partial void UpdateQCVesion_TM(QCVesion_TM instance);
    partial void DeleteQCVesion_TM(QCVesion_TM instance);
    partial void InsertQCBRD_TM(QCBRD_TM instance);
    partial void UpdateQCBRD_TM(QCBRD_TM instance);
    partial void DeleteQCBRD_TM(QCBRD_TM instance);
    partial void InsertQCCDS_TM(QCCDS_TM instance);
    partial void UpdateQCCDS_TM(QCCDS_TM instance);
    partial void DeleteQCCDS_TM(QCCDS_TM instance);
    partial void InsertQCCurrentBFD_TM(QCCurrentBFD_TM instance);
    partial void UpdateQCCurrentBFD_TM(QCCurrentBFD_TM instance);
    partial void DeleteQCCurrentBFD_TM(QCCurrentBFD_TM instance);
    partial void InsertQCDistributionList_TM(QCDistributionList_TM instance);
    partial void UpdateQCDistributionList_TM(QCDistributionList_TM instance);
    partial void DeleteQCDistributionList_TM(QCDistributionList_TM instance);
    partial void InsertQCFSD_TM(QCFSD_TM instance);
    partial void UpdateQCFSD_TM(QCFSD_TM instance);
    partial void DeleteQCFSD_TM(QCFSD_TM instance);
    partial void InsertQCGlossary_TM(QCGlossary_TM instance);
    partial void UpdateQCGlossary_TM(QCGlossary_TM instance);
    partial void DeleteQCGlossary_TM(QCGlossary_TM instance);
    partial void InsertQCHakAkses_TR(QCHakAkses_TR instance);
    partial void UpdateQCHakAkses_TR(QCHakAkses_TR instance);
    partial void DeleteQCHakAkses_TR(QCHakAkses_TR instance);
    partial void InsertQCLOB_TM(QCLOB_TM instance);
    partial void UpdateQCLOB_TM(QCLOB_TM instance);
    partial void DeleteQCLOB_TM(QCLOB_TM instance);
    partial void InsertQCNegativeScenario_TM(QCNegativeScenario_TM instance);
    partial void UpdateQCNegativeScenario_TM(QCNegativeScenario_TM instance);
    partial void DeleteQCNegativeScenario_TM(QCNegativeScenario_TM instance);
    partial void InsertQCPositiveScenario_TM(QCPositiveScenario_TM instance);
    partial void UpdateQCPositiveScenario_TM(QCPositiveScenario_TM instance);
    partial void DeleteQCPositiveScenario_TM(QCPositiveScenario_TM instance);
    partial void InsertQCProject_TM(QCProject_TM instance);
    partial void UpdateQCProject_TM(QCProject_TM instance);
    partial void DeleteQCProject_TM(QCProject_TM instance);
    partial void InsertQCProposedReport_TM(QCProposedReport_TM instance);
    partial void UpdateQCProposedReport_TM(QCProposedReport_TM instance);
    partial void DeleteQCProposedReport_TM(QCProposedReport_TM instance);
    partial void InsertQCRequirement_TM(QCRequirement_TM instance);
    partial void UpdateQCRequirement_TM(QCRequirement_TM instance);
    partial void DeleteQCRequirement_TM(QCRequirement_TM instance);
    partial void InsertQCRole_TM(QCRole_TM instance);
    partial void UpdateQCRole_TM(QCRole_TM instance);
    partial void DeleteQCRole_TM(QCRole_TM instance);
    partial void InsertQCSecurityBackUp_TM(QCSecurityBackUp_TM instance);
    partial void UpdateQCSecurityBackUp_TM(QCSecurityBackUp_TM instance);
    partial void DeleteQCSecurityBackUp_TM(QCSecurityBackUp_TM instance);
    partial void InsertQCSolution_TM(QCSolution_TM instance);
    partial void UpdateQCSolution_TM(QCSolution_TM instance);
    partial void DeleteQCSolution_TM(QCSolution_TM instance);
    partial void InsertQCStakeholder_TM(QCStakeholder_TM instance);
    partial void UpdateQCStakeholder_TM(QCStakeholder_TM instance);
    partial void DeleteQCStakeholder_TM(QCStakeholder_TM instance);
    partial void InsertQCUser_TM(QCUser_TM instance);
    partial void UpdateQCUser_TM(QCUser_TM instance);
    partial void DeleteQCUser_TM(QCUser_TM instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::One_QC.Properties.Settings.Default.SQL_OneQCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QCAssumption_TM> QCAssumption_TMs
		{
			get
			{
				return this.GetTable<QCAssumption_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCBackUpRecovery_TM> QCBackUpRecovery_TMs
		{
			get
			{
				return this.GetTable<QCBackUpRecovery_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCVesion_TM> QCVesion_TMs
		{
			get
			{
				return this.GetTable<QCVesion_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCBRD_TM> QCBRD_TMs
		{
			get
			{
				return this.GetTable<QCBRD_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCCDS_TM> QCCDS_TMs
		{
			get
			{
				return this.GetTable<QCCDS_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCCurrentBFD_TM> QCCurrentBFD_TMs
		{
			get
			{
				return this.GetTable<QCCurrentBFD_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCDistributionList_TM> QCDistributionList_TMs
		{
			get
			{
				return this.GetTable<QCDistributionList_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCFSD_TM> QCFSD_TMs
		{
			get
			{
				return this.GetTable<QCFSD_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCGlossary_TM> QCGlossary_TMs
		{
			get
			{
				return this.GetTable<QCGlossary_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCHakAkses_TR> QCHakAkses_TRs
		{
			get
			{
				return this.GetTable<QCHakAkses_TR>();
			}
		}
		
		public System.Data.Linq.Table<QCLOB_TM> QCLOB_TMs
		{
			get
			{
				return this.GetTable<QCLOB_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCNegativeScenario_TM> QCNegativeScenario_TMs
		{
			get
			{
				return this.GetTable<QCNegativeScenario_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCPositiveScenario_TM> QCPositiveScenario_TMs
		{
			get
			{
				return this.GetTable<QCPositiveScenario_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCProject_TM> QCProject_TMs
		{
			get
			{
				return this.GetTable<QCProject_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCProposedReport_TM> QCProposedReport_TMs
		{
			get
			{
				return this.GetTable<QCProposedReport_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCRequirement_TM> QCRequirement_TMs
		{
			get
			{
				return this.GetTable<QCRequirement_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCRole_TM> QCRole_TMs
		{
			get
			{
				return this.GetTable<QCRole_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCSecurityBackUp_TM> QCSecurityBackUp_TMs
		{
			get
			{
				return this.GetTable<QCSecurityBackUp_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCSolution_TM> QCSolution_TMs
		{
			get
			{
				return this.GetTable<QCSolution_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCStakeholder_TM> QCStakeholder_TMs
		{
			get
			{
				return this.GetTable<QCStakeholder_TM>();
			}
		}
		
		public System.Data.Linq.Table<QCUser_TM> QCUser_TMs
		{
			get
			{
				return this.GetTable<QCUser_TM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCAssumption_TM")]
	public partial class QCAssumption_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAssumption;
		
		private string _Assumption;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAssumptionChanging(int value);
    partial void OnIDAssumptionChanged();
    partial void OnAssumptionChanging(string value);
    partial void OnAssumptionChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCAssumption_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAssumption", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAssumption
		{
			get
			{
				return this._IDAssumption;
			}
			set
			{
				if ((this._IDAssumption != value))
				{
					this.OnIDAssumptionChanging(value);
					this.SendPropertyChanging();
					this._IDAssumption = value;
					this.SendPropertyChanged("IDAssumption");
					this.OnIDAssumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assumption", DbType="VarChar(500)")]
		public string Assumption
		{
			get
			{
				return this._Assumption;
			}
			set
			{
				if ((this._Assumption != value))
				{
					this.OnAssumptionChanging(value);
					this.SendPropertyChanging();
					this._Assumption = value;
					this.SendPropertyChanged("Assumption");
					this.OnAssumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCBackUpRecovery_TM")]
	public partial class QCBackUpRecovery_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBackUpRecovery;
		
		private string _Data;
		
		private string _Frequency;
		
		private string _TypeOfBackUp;
		
		private string _Storage;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBackUpRecoveryChanging(int value);
    partial void OnIDBackUpRecoveryChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnTypeOfBackUpChanging(string value);
    partial void OnTypeOfBackUpChanged();
    partial void OnStorageChanging(string value);
    partial void OnStorageChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCBackUpRecovery_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBackUpRecovery", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBackUpRecovery
		{
			get
			{
				return this._IDBackUpRecovery;
			}
			set
			{
				if ((this._IDBackUpRecovery != value))
				{
					this.OnIDBackUpRecoveryChanging(value);
					this.SendPropertyChanging();
					this._IDBackUpRecovery = value;
					this.SendPropertyChanged("IDBackUpRecovery");
					this.OnIDBackUpRecoveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(500)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="VarChar(500)")]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfBackUp", DbType="VarChar(500)")]
		public string TypeOfBackUp
		{
			get
			{
				return this._TypeOfBackUp;
			}
			set
			{
				if ((this._TypeOfBackUp != value))
				{
					this.OnTypeOfBackUpChanging(value);
					this.SendPropertyChanging();
					this._TypeOfBackUp = value;
					this.SendPropertyChanged("TypeOfBackUp");
					this.OnTypeOfBackUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storage", DbType="VarChar(500)")]
		public string Storage
		{
			get
			{
				return this._Storage;
			}
			set
			{
				if ((this._Storage != value))
				{
					this.OnStorageChanging(value);
					this.SendPropertyChanging();
					this._Storage = value;
					this.SendPropertyChanged("Storage");
					this.OnStorageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCVesion_TM")]
	public partial class QCVesion_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVersion;
		
		private string _Version;
		
		private string _Author;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _Changes;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVersionChanging(int value);
    partial void OnIDVersionChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnChangesChanging(string value);
    partial void OnChangesChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCVesion_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVersion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDVersion
		{
			get
			{
				return this._IDVersion;
			}
			set
			{
				if ((this._IDVersion != value))
				{
					this.OnIDVersionChanging(value);
					this.SendPropertyChanging();
					this._IDVersion = value;
					this.SendPropertyChanged("IDVersion");
					this.OnIDVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(10)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="Date")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changes", DbType="VarChar(50)")]
		public string Changes
		{
			get
			{
				return this._Changes;
			}
			set
			{
				if ((this._Changes != value))
				{
					this.OnChangesChanging(value);
					this.SendPropertyChanging();
					this._Changes = value;
					this.SendPropertyChanged("Changes");
					this.OnChangesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCBRD_TM")]
	public partial class QCBRD_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBRD;
		
		private string _IDProject;
		
		private System.Nullable<System.DateTime> _Tanggal;
		
		private string _BRD;
		
		private string _SFAT;
		
		private string _ProectID;
		
		private string _ITRoadMap;
		
		private string _POName;
		
		private string _POEmail;
		
		private string _PODivision;
		
		private string _POOfficeID;
		
		private string _POCostCenter;
		
		private string _POverviewBG;
		
		private string _PDependencies;
		
		private string _Appendix;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBRDChanging(int value);
    partial void OnIDBRDChanged();
    partial void OnIDProjectChanging(string value);
    partial void OnIDProjectChanged();
    partial void OnTanggalChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalChanged();
    partial void OnBRDChanging(string value);
    partial void OnBRDChanged();
    partial void OnSFATChanging(string value);
    partial void OnSFATChanged();
    partial void OnProectIDChanging(string value);
    partial void OnProectIDChanged();
    partial void OnITRoadMapChanging(string value);
    partial void OnITRoadMapChanged();
    partial void OnPONameChanging(string value);
    partial void OnPONameChanged();
    partial void OnPOEmailChanging(string value);
    partial void OnPOEmailChanged();
    partial void OnPODivisionChanging(string value);
    partial void OnPODivisionChanged();
    partial void OnPOOfficeIDChanging(string value);
    partial void OnPOOfficeIDChanged();
    partial void OnPOCostCenterChanging(string value);
    partial void OnPOCostCenterChanged();
    partial void OnPOverviewBGChanging(string value);
    partial void OnPOverviewBGChanged();
    partial void OnPDependenciesChanging(string value);
    partial void OnPDependenciesChanged();
    partial void OnAppendixChanging(string value);
    partial void OnAppendixChanged();
    #endregion
		
		public QCBRD_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProject", DbType="VarChar(10)")]
		public string IDProject
		{
			get
			{
				return this._IDProject;
			}
			set
			{
				if ((this._IDProject != value))
				{
					this.OnIDProjectChanging(value);
					this.SendPropertyChanging();
					this._IDProject = value;
					this.SendPropertyChanged("IDProject");
					this.OnIDProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tanggal", DbType="Date")]
		public System.Nullable<System.DateTime> Tanggal
		{
			get
			{
				return this._Tanggal;
			}
			set
			{
				if ((this._Tanggal != value))
				{
					this.OnTanggalChanging(value);
					this.SendPropertyChanging();
					this._Tanggal = value;
					this.SendPropertyChanged("Tanggal");
					this.OnTanggalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRD", DbType="VarChar(100)")]
		public string BRD
		{
			get
			{
				return this._BRD;
			}
			set
			{
				if ((this._BRD != value))
				{
					this.OnBRDChanging(value);
					this.SendPropertyChanging();
					this._BRD = value;
					this.SendPropertyChanged("BRD");
					this.OnBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SFAT", DbType="VarChar(100)")]
		public string SFAT
		{
			get
			{
				return this._SFAT;
			}
			set
			{
				if ((this._SFAT != value))
				{
					this.OnSFATChanging(value);
					this.SendPropertyChanging();
					this._SFAT = value;
					this.SendPropertyChanged("SFAT");
					this.OnSFATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProectID", DbType="VarChar(50)")]
		public string ProectID
		{
			get
			{
				return this._ProectID;
			}
			set
			{
				if ((this._ProectID != value))
				{
					this.OnProectIDChanging(value);
					this.SendPropertyChanging();
					this._ProectID = value;
					this.SendPropertyChanged("ProectID");
					this.OnProectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITRoadMap", DbType="VarChar(50)")]
		public string ITRoadMap
		{
			get
			{
				return this._ITRoadMap;
			}
			set
			{
				if ((this._ITRoadMap != value))
				{
					this.OnITRoadMapChanging(value);
					this.SendPropertyChanging();
					this._ITRoadMap = value;
					this.SendPropertyChanged("ITRoadMap");
					this.OnITRoadMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POName", DbType="VarChar(50)")]
		public string POName
		{
			get
			{
				return this._POName;
			}
			set
			{
				if ((this._POName != value))
				{
					this.OnPONameChanging(value);
					this.SendPropertyChanging();
					this._POName = value;
					this.SendPropertyChanged("POName");
					this.OnPONameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POEmail", DbType="VarChar(50)")]
		public string POEmail
		{
			get
			{
				return this._POEmail;
			}
			set
			{
				if ((this._POEmail != value))
				{
					this.OnPOEmailChanging(value);
					this.SendPropertyChanging();
					this._POEmail = value;
					this.SendPropertyChanged("POEmail");
					this.OnPOEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODivision", DbType="VarChar(50)")]
		public string PODivision
		{
			get
			{
				return this._PODivision;
			}
			set
			{
				if ((this._PODivision != value))
				{
					this.OnPODivisionChanging(value);
					this.SendPropertyChanging();
					this._PODivision = value;
					this.SendPropertyChanged("PODivision");
					this.OnPODivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POOfficeID", DbType="VarChar(10)")]
		public string POOfficeID
		{
			get
			{
				return this._POOfficeID;
			}
			set
			{
				if ((this._POOfficeID != value))
				{
					this.OnPOOfficeIDChanging(value);
					this.SendPropertyChanging();
					this._POOfficeID = value;
					this.SendPropertyChanged("POOfficeID");
					this.OnPOOfficeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POCostCenter", DbType="VarChar(10)")]
		public string POCostCenter
		{
			get
			{
				return this._POCostCenter;
			}
			set
			{
				if ((this._POCostCenter != value))
				{
					this.OnPOCostCenterChanging(value);
					this.SendPropertyChanging();
					this._POCostCenter = value;
					this.SendPropertyChanged("POCostCenter");
					this.OnPOCostCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POverviewBG", DbType="VarChar(MAX)")]
		public string POverviewBG
		{
			get
			{
				return this._POverviewBG;
			}
			set
			{
				if ((this._POverviewBG != value))
				{
					this.OnPOverviewBGChanging(value);
					this.SendPropertyChanging();
					this._POverviewBG = value;
					this.SendPropertyChanged("POverviewBG");
					this.OnPOverviewBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDependencies", DbType="VarChar(MAX)")]
		public string PDependencies
		{
			get
			{
				return this._PDependencies;
			}
			set
			{
				if ((this._PDependencies != value))
				{
					this.OnPDependenciesChanging(value);
					this.SendPropertyChanging();
					this._PDependencies = value;
					this.SendPropertyChanged("PDependencies");
					this.OnPDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appendix", DbType="VarChar(MAX)")]
		public string Appendix
		{
			get
			{
				return this._Appendix;
			}
			set
			{
				if ((this._Appendix != value))
				{
					this.OnAppendixChanging(value);
					this.SendPropertyChanging();
					this._Appendix = value;
					this.SendPropertyChanged("Appendix");
					this.OnAppendixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCCDS_TM")]
	public partial class QCCDS_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCDS;
		
		private string _IDProject;
		
		private string _CDSNumber;
		
		private string _DCCDocVer;
		
		private System.Nullable<System.DateTime> _DCCDate;
		
		private string _DCCName;
		
		private string _DCCSummary;
		
		private string _Objectives;
		
		private string _Scope;
		
		private string _ApplicationScript;
		
		private string _Topology;
		
		private string _OtherInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCDSChanging(int value);
    partial void OnIDCDSChanged();
    partial void OnIDProjectChanging(string value);
    partial void OnIDProjectChanged();
    partial void OnCDSNumberChanging(string value);
    partial void OnCDSNumberChanged();
    partial void OnDCCDocVerChanging(string value);
    partial void OnDCCDocVerChanged();
    partial void OnDCCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDCCDateChanged();
    partial void OnDCCNameChanging(string value);
    partial void OnDCCNameChanged();
    partial void OnDCCSummaryChanging(string value);
    partial void OnDCCSummaryChanged();
    partial void OnObjectivesChanging(string value);
    partial void OnObjectivesChanged();
    partial void OnScopeChanging(string value);
    partial void OnScopeChanged();
    partial void OnApplicationScriptChanging(string value);
    partial void OnApplicationScriptChanged();
    partial void OnTopologyChanging(string value);
    partial void OnTopologyChanged();
    partial void OnOtherInfoChanging(string value);
    partial void OnOtherInfoChanged();
    #endregion
		
		public QCCDS_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCDS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCDS
		{
			get
			{
				return this._IDCDS;
			}
			set
			{
				if ((this._IDCDS != value))
				{
					this.OnIDCDSChanging(value);
					this.SendPropertyChanging();
					this._IDCDS = value;
					this.SendPropertyChanged("IDCDS");
					this.OnIDCDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProject", DbType="VarChar(10)")]
		public string IDProject
		{
			get
			{
				return this._IDProject;
			}
			set
			{
				if ((this._IDProject != value))
				{
					this.OnIDProjectChanging(value);
					this.SendPropertyChanging();
					this._IDProject = value;
					this.SendPropertyChanged("IDProject");
					this.OnIDProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDSNumber", DbType="VarChar(100)")]
		public string CDSNumber
		{
			get
			{
				return this._CDSNumber;
			}
			set
			{
				if ((this._CDSNumber != value))
				{
					this.OnCDSNumberChanging(value);
					this.SendPropertyChanging();
					this._CDSNumber = value;
					this.SendPropertyChanged("CDSNumber");
					this.OnCDSNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCDocVer", DbType="VarChar(50)")]
		public string DCCDocVer
		{
			get
			{
				return this._DCCDocVer;
			}
			set
			{
				if ((this._DCCDocVer != value))
				{
					this.OnDCCDocVerChanging(value);
					this.SendPropertyChanging();
					this._DCCDocVer = value;
					this.SendPropertyChanged("DCCDocVer");
					this.OnDCCDocVerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCDate", DbType="Date")]
		public System.Nullable<System.DateTime> DCCDate
		{
			get
			{
				return this._DCCDate;
			}
			set
			{
				if ((this._DCCDate != value))
				{
					this.OnDCCDateChanging(value);
					this.SendPropertyChanging();
					this._DCCDate = value;
					this.SendPropertyChanged("DCCDate");
					this.OnDCCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCName", DbType="VarChar(50)")]
		public string DCCName
		{
			get
			{
				return this._DCCName;
			}
			set
			{
				if ((this._DCCName != value))
				{
					this.OnDCCNameChanging(value);
					this.SendPropertyChanging();
					this._DCCName = value;
					this.SendPropertyChanged("DCCName");
					this.OnDCCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCSummary", DbType="VarChar(100)")]
		public string DCCSummary
		{
			get
			{
				return this._DCCSummary;
			}
			set
			{
				if ((this._DCCSummary != value))
				{
					this.OnDCCSummaryChanging(value);
					this.SendPropertyChanging();
					this._DCCSummary = value;
					this.SendPropertyChanged("DCCSummary");
					this.OnDCCSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objectives", DbType="VarChar(500)")]
		public string Objectives
		{
			get
			{
				return this._Objectives;
			}
			set
			{
				if ((this._Objectives != value))
				{
					this.OnObjectivesChanging(value);
					this.SendPropertyChanging();
					this._Objectives = value;
					this.SendPropertyChanged("Objectives");
					this.OnObjectivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scope", DbType="VarChar(MAX)")]
		public string Scope
		{
			get
			{
				return this._Scope;
			}
			set
			{
				if ((this._Scope != value))
				{
					this.OnScopeChanging(value);
					this.SendPropertyChanging();
					this._Scope = value;
					this.SendPropertyChanged("Scope");
					this.OnScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationScript", DbType="VarChar(MAX)")]
		public string ApplicationScript
		{
			get
			{
				return this._ApplicationScript;
			}
			set
			{
				if ((this._ApplicationScript != value))
				{
					this.OnApplicationScriptChanging(value);
					this.SendPropertyChanging();
					this._ApplicationScript = value;
					this.SendPropertyChanged("ApplicationScript");
					this.OnApplicationScriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topology", DbType="VarChar(MAX)")]
		public string Topology
		{
			get
			{
				return this._Topology;
			}
			set
			{
				if ((this._Topology != value))
				{
					this.OnTopologyChanging(value);
					this.SendPropertyChanging();
					this._Topology = value;
					this.SendPropertyChanged("Topology");
					this.OnTopologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInfo", DbType="VarChar(MAX)")]
		public string OtherInfo
		{
			get
			{
				return this._OtherInfo;
			}
			set
			{
				if ((this._OtherInfo != value))
				{
					this.OnOtherInfoChanging(value);
					this.SendPropertyChanging();
					this._OtherInfo = value;
					this.SendPropertyChanged("OtherInfo");
					this.OnOtherInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCCurrentBFD_TM")]
	public partial class QCCurrentBFD_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCurrentBFD;
		
		private string _Nama;
		
		private string _Gambar;
		
		private string _Description;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCurrentBFDChanging(int value);
    partial void OnIDCurrentBFDChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    partial void OnGambarChanging(string value);
    partial void OnGambarChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCCurrentBFD_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCurrentBFD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCurrentBFD
		{
			get
			{
				return this._IDCurrentBFD;
			}
			set
			{
				if ((this._IDCurrentBFD != value))
				{
					this.OnIDCurrentBFDChanging(value);
					this.SendPropertyChanging();
					this._IDCurrentBFD = value;
					this.SendPropertyChanged("IDCurrentBFD");
					this.OnIDCurrentBFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(100)")]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gambar", DbType="VarChar(MAX)")]
		public string Gambar
		{
			get
			{
				return this._Gambar;
			}
			set
			{
				if ((this._Gambar != value))
				{
					this.OnGambarChanging(value);
					this.SendPropertyChanging();
					this._Gambar = value;
					this.SendPropertyChanged("Gambar");
					this.OnGambarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCDistributionList_TM")]
	public partial class QCDistributionList_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDistList;
		
		private string _Nama;
		
		private string _Title;
		
		private string _BusinessUnit;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDistListChanging(int value);
    partial void OnIDDistListChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBusinessUnitChanging(string value);
    partial void OnBusinessUnitChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCDistributionList_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDistList", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDistList
		{
			get
			{
				return this._IDDistList;
			}
			set
			{
				if ((this._IDDistList != value))
				{
					this.OnIDDistListChanging(value);
					this.SendPropertyChanging();
					this._IDDistList = value;
					this.SendPropertyChanged("IDDistList");
					this.OnIDDistListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50)")]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnit", DbType="VarChar(100)")]
		public string BusinessUnit
		{
			get
			{
				return this._BusinessUnit;
			}
			set
			{
				if ((this._BusinessUnit != value))
				{
					this.OnBusinessUnitChanging(value);
					this.SendPropertyChanging();
					this._BusinessUnit = value;
					this.SendPropertyChanged("BusinessUnit");
					this.OnBusinessUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCFSD_TM")]
	public partial class QCFSD_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFSD;
		
		private string _IDProject;
		
		private string _DCCVersion;
		
		private System.Nullable<System.DateTime> _DCCDate;
		
		private string _DCCName;
		
		private string _DCCSummary;
		
		private string _Objectives;
		
		private string _Scope;
		
		private string _Topology;
		
		private string _MenuRelation;
		
		private string _DBDiagram;
		
		private string _JobOrBatch;
		
		private string _Parameter;
		
		private string _TestScenario;
		
		private string _OtherInfo;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _TanggalBuat;
		
		private System.Nullable<System.DateTime> _TanggalApprove;
		
		private System.Nullable<System.DateTime> _TanggalUpload;
		
		private string _Pembuat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFSDChanging(int value);
    partial void OnIDFSDChanged();
    partial void OnIDProjectChanging(string value);
    partial void OnIDProjectChanged();
    partial void OnDCCVersionChanging(string value);
    partial void OnDCCVersionChanged();
    partial void OnDCCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDCCDateChanged();
    partial void OnDCCNameChanging(string value);
    partial void OnDCCNameChanged();
    partial void OnDCCSummaryChanging(string value);
    partial void OnDCCSummaryChanged();
    partial void OnObjectivesChanging(string value);
    partial void OnObjectivesChanged();
    partial void OnScopeChanging(string value);
    partial void OnScopeChanged();
    partial void OnTopologyChanging(string value);
    partial void OnTopologyChanged();
    partial void OnMenuRelationChanging(string value);
    partial void OnMenuRelationChanged();
    partial void OnDBDiagramChanging(string value);
    partial void OnDBDiagramChanged();
    partial void OnJobOrBatchChanging(string value);
    partial void OnJobOrBatchChanged();
    partial void OnParameterChanging(string value);
    partial void OnParameterChanged();
    partial void OnTestScenarioChanging(string value);
    partial void OnTestScenarioChanged();
    partial void OnOtherInfoChanging(string value);
    partial void OnOtherInfoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTanggalBuatChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalBuatChanged();
    partial void OnTanggalApproveChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalApproveChanged();
    partial void OnTanggalUploadChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalUploadChanged();
    partial void OnPembuatChanging(string value);
    partial void OnPembuatChanged();
    #endregion
		
		public QCFSD_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFSD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDFSD
		{
			get
			{
				return this._IDFSD;
			}
			set
			{
				if ((this._IDFSD != value))
				{
					this.OnIDFSDChanging(value);
					this.SendPropertyChanging();
					this._IDFSD = value;
					this.SendPropertyChanged("IDFSD");
					this.OnIDFSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProject", DbType="VarChar(10)")]
		public string IDProject
		{
			get
			{
				return this._IDProject;
			}
			set
			{
				if ((this._IDProject != value))
				{
					this.OnIDProjectChanging(value);
					this.SendPropertyChanging();
					this._IDProject = value;
					this.SendPropertyChanged("IDProject");
					this.OnIDProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCVersion", DbType="VarChar(50)")]
		public string DCCVersion
		{
			get
			{
				return this._DCCVersion;
			}
			set
			{
				if ((this._DCCVersion != value))
				{
					this.OnDCCVersionChanging(value);
					this.SendPropertyChanging();
					this._DCCVersion = value;
					this.SendPropertyChanged("DCCVersion");
					this.OnDCCVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCDate", DbType="Date")]
		public System.Nullable<System.DateTime> DCCDate
		{
			get
			{
				return this._DCCDate;
			}
			set
			{
				if ((this._DCCDate != value))
				{
					this.OnDCCDateChanging(value);
					this.SendPropertyChanging();
					this._DCCDate = value;
					this.SendPropertyChanged("DCCDate");
					this.OnDCCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCName", DbType="VarChar(50)")]
		public string DCCName
		{
			get
			{
				return this._DCCName;
			}
			set
			{
				if ((this._DCCName != value))
				{
					this.OnDCCNameChanging(value);
					this.SendPropertyChanging();
					this._DCCName = value;
					this.SendPropertyChanged("DCCName");
					this.OnDCCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCCSummary", DbType="VarChar(50)")]
		public string DCCSummary
		{
			get
			{
				return this._DCCSummary;
			}
			set
			{
				if ((this._DCCSummary != value))
				{
					this.OnDCCSummaryChanging(value);
					this.SendPropertyChanging();
					this._DCCSummary = value;
					this.SendPropertyChanged("DCCSummary");
					this.OnDCCSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objectives", DbType="VarChar(500)")]
		public string Objectives
		{
			get
			{
				return this._Objectives;
			}
			set
			{
				if ((this._Objectives != value))
				{
					this.OnObjectivesChanging(value);
					this.SendPropertyChanging();
					this._Objectives = value;
					this.SendPropertyChanged("Objectives");
					this.OnObjectivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scope", DbType="VarChar(MAX)")]
		public string Scope
		{
			get
			{
				return this._Scope;
			}
			set
			{
				if ((this._Scope != value))
				{
					this.OnScopeChanging(value);
					this.SendPropertyChanging();
					this._Scope = value;
					this.SendPropertyChanged("Scope");
					this.OnScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topology", DbType="VarChar(250)")]
		public string Topology
		{
			get
			{
				return this._Topology;
			}
			set
			{
				if ((this._Topology != value))
				{
					this.OnTopologyChanging(value);
					this.SendPropertyChanging();
					this._Topology = value;
					this.SendPropertyChanged("Topology");
					this.OnTopologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuRelation", DbType="VarChar(250)")]
		public string MenuRelation
		{
			get
			{
				return this._MenuRelation;
			}
			set
			{
				if ((this._MenuRelation != value))
				{
					this.OnMenuRelationChanging(value);
					this.SendPropertyChanging();
					this._MenuRelation = value;
					this.SendPropertyChanged("MenuRelation");
					this.OnMenuRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBDiagram", DbType="VarChar(MAX)")]
		public string DBDiagram
		{
			get
			{
				return this._DBDiagram;
			}
			set
			{
				if ((this._DBDiagram != value))
				{
					this.OnDBDiagramChanging(value);
					this.SendPropertyChanging();
					this._DBDiagram = value;
					this.SendPropertyChanged("DBDiagram");
					this.OnDBDiagramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobOrBatch", DbType="VarChar(MAX)")]
		public string JobOrBatch
		{
			get
			{
				return this._JobOrBatch;
			}
			set
			{
				if ((this._JobOrBatch != value))
				{
					this.OnJobOrBatchChanging(value);
					this.SendPropertyChanging();
					this._JobOrBatch = value;
					this.SendPropertyChanged("JobOrBatch");
					this.OnJobOrBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="VarChar(MAX)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScenario", DbType="VarChar(MAX)")]
		public string TestScenario
		{
			get
			{
				return this._TestScenario;
			}
			set
			{
				if ((this._TestScenario != value))
				{
					this.OnTestScenarioChanging(value);
					this.SendPropertyChanging();
					this._TestScenario = value;
					this.SendPropertyChanged("TestScenario");
					this.OnTestScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInfo", DbType="VarChar(MAX)")]
		public string OtherInfo
		{
			get
			{
				return this._OtherInfo;
			}
			set
			{
				if ((this._OtherInfo != value))
				{
					this.OnOtherInfoChanging(value);
					this.SendPropertyChanging();
					this._OtherInfo = value;
					this.SendPropertyChanged("OtherInfo");
					this.OnOtherInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalBuat", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalBuat
		{
			get
			{
				return this._TanggalBuat;
			}
			set
			{
				if ((this._TanggalBuat != value))
				{
					this.OnTanggalBuatChanging(value);
					this.SendPropertyChanging();
					this._TanggalBuat = value;
					this.SendPropertyChanged("TanggalBuat");
					this.OnTanggalBuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalApprove", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalApprove
		{
			get
			{
				return this._TanggalApprove;
			}
			set
			{
				if ((this._TanggalApprove != value))
				{
					this.OnTanggalApproveChanging(value);
					this.SendPropertyChanging();
					this._TanggalApprove = value;
					this.SendPropertyChanged("TanggalApprove");
					this.OnTanggalApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalUpload", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalUpload
		{
			get
			{
				return this._TanggalUpload;
			}
			set
			{
				if ((this._TanggalUpload != value))
				{
					this.OnTanggalUploadChanging(value);
					this.SendPropertyChanging();
					this._TanggalUpload = value;
					this.SendPropertyChanged("TanggalUpload");
					this.OnTanggalUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pembuat", DbType="VarChar(50)")]
		public string Pembuat
		{
			get
			{
				return this._Pembuat;
			}
			set
			{
				if ((this._Pembuat != value))
				{
					this.OnPembuatChanging(value);
					this.SendPropertyChanging();
					this._Pembuat = value;
					this.SendPropertyChanged("Pembuat");
					this.OnPembuatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCGlossary_TM")]
	public partial class QCGlossary_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGlossary;
		
		private string _Term;
		
		private string _Definition;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGlossaryChanging(int value);
    partial void OnIDGlossaryChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCGlossary_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGlossary", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDGlossary
		{
			get
			{
				return this._IDGlossary;
			}
			set
			{
				if ((this._IDGlossary != value))
				{
					this.OnIDGlossaryChanging(value);
					this.SendPropertyChanging();
					this._IDGlossary = value;
					this.SendPropertyChanged("IDGlossary");
					this.OnIDGlossaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(50)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="VarChar(50)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCHakAkses_TR")]
	public partial class QCHakAkses_TR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHakAkses;
		
		private System.Nullable<int> _IDUser;
		
		private System.Nullable<int> _IDRole;
		
		private System.Nullable<int> _IDProject;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHakAksesChanging(int value);
    partial void OnIDHakAksesChanged();
    partial void OnIDUserChanging(System.Nullable<int> value);
    partial void OnIDUserChanged();
    partial void OnIDRoleChanging(System.Nullable<int> value);
    partial void OnIDRoleChanged();
    partial void OnIDProjectChanging(System.Nullable<int> value);
    partial void OnIDProjectChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public QCHakAkses_TR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHakAkses", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHakAkses
		{
			get
			{
				return this._IDHakAkses;
			}
			set
			{
				if ((this._IDHakAkses != value))
				{
					this.OnIDHakAksesChanging(value);
					this.SendPropertyChanging();
					this._IDHakAkses = value;
					this.SendPropertyChanged("IDHakAkses");
					this.OnIDHakAksesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int")]
		public System.Nullable<int> IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", DbType="Int")]
		public System.Nullable<int> IDRole
		{
			get
			{
				return this._IDRole;
			}
			set
			{
				if ((this._IDRole != value))
				{
					this.OnIDRoleChanging(value);
					this.SendPropertyChanging();
					this._IDRole = value;
					this.SendPropertyChanged("IDRole");
					this.OnIDRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProject", DbType="Int")]
		public System.Nullable<int> IDProject
		{
			get
			{
				return this._IDProject;
			}
			set
			{
				if ((this._IDProject != value))
				{
					this.OnIDProjectChanging(value);
					this.SendPropertyChanging();
					this._IDProject = value;
					this.SendPropertyChanged("IDProject");
					this.OnIDProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCLOB_TM")]
	public partial class QCLOB_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLOB;
		
		private string _Nama;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLOBChanging(int value);
    partial void OnIDLOBChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    #endregion
		
		public QCLOB_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLOB
		{
			get
			{
				return this._IDLOB;
			}
			set
			{
				if ((this._IDLOB != value))
				{
					this.OnIDLOBChanging(value);
					this.SendPropertyChanging();
					this._IDLOB = value;
					this.SendPropertyChanged("IDLOB");
					this.OnIDLOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(100)")]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCNegativeScenario_TM")]
	public partial class QCNegativeScenario_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNegativeScenario;
		
		private string _Scenario;
		
		private string _IDCDS;
		
		private string _IDBRD;
		
		private string _Mandatory;
		
		private string _Result;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNegativeScenarioChanging(int value);
    partial void OnIDNegativeScenarioChanged();
    partial void OnScenarioChanging(string value);
    partial void OnScenarioChanged();
    partial void OnIDCDSChanging(string value);
    partial void OnIDCDSChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    partial void OnMandatoryChanging(string value);
    partial void OnMandatoryChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public QCNegativeScenario_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNegativeScenario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNegativeScenario
		{
			get
			{
				return this._IDNegativeScenario;
			}
			set
			{
				if ((this._IDNegativeScenario != value))
				{
					this.OnIDNegativeScenarioChanging(value);
					this.SendPropertyChanging();
					this._IDNegativeScenario = value;
					this.SendPropertyChanged("IDNegativeScenario");
					this.OnIDNegativeScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scenario", DbType="VarChar(500)")]
		public string Scenario
		{
			get
			{
				return this._Scenario;
			}
			set
			{
				if ((this._Scenario != value))
				{
					this.OnScenarioChanging(value);
					this.SendPropertyChanging();
					this._Scenario = value;
					this.SendPropertyChanged("Scenario");
					this.OnScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCDS", DbType="VarChar(10)")]
		public string IDCDS
		{
			get
			{
				return this._IDCDS;
			}
			set
			{
				if ((this._IDCDS != value))
				{
					this.OnIDCDSChanging(value);
					this.SendPropertyChanging();
					this._IDCDS = value;
					this.SendPropertyChanged("IDCDS");
					this.OnIDCDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="VarChar(500)")]
		public string Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCPositiveScenario_TM")]
	public partial class QCPositiveScenario_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPositiveScenario;
		
		private string _IDCDS;
		
		private string _Scenario;
		
		private string _IDBRD;
		
		private string _Mandatory;
		
		private string _Result;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPositiveScenarioChanging(int value);
    partial void OnIDPositiveScenarioChanged();
    partial void OnIDCDSChanging(string value);
    partial void OnIDCDSChanged();
    partial void OnScenarioChanging(string value);
    partial void OnScenarioChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    partial void OnMandatoryChanging(string value);
    partial void OnMandatoryChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public QCPositiveScenario_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPositiveScenario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPositiveScenario
		{
			get
			{
				return this._IDPositiveScenario;
			}
			set
			{
				if ((this._IDPositiveScenario != value))
				{
					this.OnIDPositiveScenarioChanging(value);
					this.SendPropertyChanging();
					this._IDPositiveScenario = value;
					this.SendPropertyChanged("IDPositiveScenario");
					this.OnIDPositiveScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCDS", DbType="VarChar(10)")]
		public string IDCDS
		{
			get
			{
				return this._IDCDS;
			}
			set
			{
				if ((this._IDCDS != value))
				{
					this.OnIDCDSChanging(value);
					this.SendPropertyChanging();
					this._IDCDS = value;
					this.SendPropertyChanged("IDCDS");
					this.OnIDCDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scenario", DbType="VarChar(500)")]
		public string Scenario
		{
			get
			{
				return this._Scenario;
			}
			set
			{
				if ((this._Scenario != value))
				{
					this.OnScenarioChanging(value);
					this.SendPropertyChanging();
					this._Scenario = value;
					this.SendPropertyChanged("Scenario");
					this.OnScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="VarChar(500)")]
		public string Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCProject_TM")]
	public partial class QCProject_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProject;
		
		private string _NamaProject;
		
		private System.Nullable<System.DateTime> _TanggalMulai;
		
		private System.Nullable<System.DateTime> _TanggalAkhir;
		
		private string _NamaAplikasi;
		
		private string _JenisProject;
		
		private string _ProjectID;
		
		private string _Divisi;
		
		private string _IDLOB;
		
		private System.Nullable<System.DateTime> _TanggalBRD;
		
		private System.Nullable<System.DateTime> _TanggalFSD;
		
		private System.Nullable<System.DateTime> _TanggalCDS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProjectChanging(int value);
    partial void OnIDProjectChanged();
    partial void OnNamaProjectChanging(string value);
    partial void OnNamaProjectChanged();
    partial void OnTanggalMulaiChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalMulaiChanged();
    partial void OnTanggalAkhirChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalAkhirChanged();
    partial void OnNamaAplikasiChanging(string value);
    partial void OnNamaAplikasiChanged();
    partial void OnJenisProjectChanging(string value);
    partial void OnJenisProjectChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnDivisiChanging(string value);
    partial void OnDivisiChanged();
    partial void OnIDLOBChanging(string value);
    partial void OnIDLOBChanged();
    partial void OnTanggalBRDChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalBRDChanged();
    partial void OnTanggalFSDChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalFSDChanged();
    partial void OnTanggalCDSChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalCDSChanged();
    #endregion
		
		public QCProject_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProject", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDProject
		{
			get
			{
				return this._IDProject;
			}
			set
			{
				if ((this._IDProject != value))
				{
					this.OnIDProjectChanging(value);
					this.SendPropertyChanging();
					this._IDProject = value;
					this.SendPropertyChanged("IDProject");
					this.OnIDProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaProject", DbType="VarChar(50)")]
		public string NamaProject
		{
			get
			{
				return this._NamaProject;
			}
			set
			{
				if ((this._NamaProject != value))
				{
					this.OnNamaProjectChanging(value);
					this.SendPropertyChanging();
					this._NamaProject = value;
					this.SendPropertyChanged("NamaProject");
					this.OnNamaProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalMulai", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalMulai
		{
			get
			{
				return this._TanggalMulai;
			}
			set
			{
				if ((this._TanggalMulai != value))
				{
					this.OnTanggalMulaiChanging(value);
					this.SendPropertyChanging();
					this._TanggalMulai = value;
					this.SendPropertyChanged("TanggalMulai");
					this.OnTanggalMulaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalAkhir", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalAkhir
		{
			get
			{
				return this._TanggalAkhir;
			}
			set
			{
				if ((this._TanggalAkhir != value))
				{
					this.OnTanggalAkhirChanging(value);
					this.SendPropertyChanging();
					this._TanggalAkhir = value;
					this.SendPropertyChanged("TanggalAkhir");
					this.OnTanggalAkhirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaAplikasi", DbType="VarChar(50)")]
		public string NamaAplikasi
		{
			get
			{
				return this._NamaAplikasi;
			}
			set
			{
				if ((this._NamaAplikasi != value))
				{
					this.OnNamaAplikasiChanging(value);
					this.SendPropertyChanging();
					this._NamaAplikasi = value;
					this.SendPropertyChanged("NamaAplikasi");
					this.OnNamaAplikasiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JenisProject", DbType="VarChar(50)")]
		public string JenisProject
		{
			get
			{
				return this._JenisProject;
			}
			set
			{
				if ((this._JenisProject != value))
				{
					this.OnJenisProjectChanging(value);
					this.SendPropertyChanging();
					this._JenisProject = value;
					this.SendPropertyChanged("JenisProject");
					this.OnJenisProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50)")]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Divisi", DbType="VarChar(50)")]
		public string Divisi
		{
			get
			{
				return this._Divisi;
			}
			set
			{
				if ((this._Divisi != value))
				{
					this.OnDivisiChanging(value);
					this.SendPropertyChanging();
					this._Divisi = value;
					this.SendPropertyChanged("Divisi");
					this.OnDivisiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOB", DbType="VarChar(10)")]
		public string IDLOB
		{
			get
			{
				return this._IDLOB;
			}
			set
			{
				if ((this._IDLOB != value))
				{
					this.OnIDLOBChanging(value);
					this.SendPropertyChanging();
					this._IDLOB = value;
					this.SendPropertyChanged("IDLOB");
					this.OnIDLOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalBRD", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalBRD
		{
			get
			{
				return this._TanggalBRD;
			}
			set
			{
				if ((this._TanggalBRD != value))
				{
					this.OnTanggalBRDChanging(value);
					this.SendPropertyChanging();
					this._TanggalBRD = value;
					this.SendPropertyChanged("TanggalBRD");
					this.OnTanggalBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalFSD", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalFSD
		{
			get
			{
				return this._TanggalFSD;
			}
			set
			{
				if ((this._TanggalFSD != value))
				{
					this.OnTanggalFSDChanging(value);
					this.SendPropertyChanging();
					this._TanggalFSD = value;
					this.SendPropertyChanged("TanggalFSD");
					this.OnTanggalFSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalCDS", DbType="Date")]
		public System.Nullable<System.DateTime> TanggalCDS
		{
			get
			{
				return this._TanggalCDS;
			}
			set
			{
				if ((this._TanggalCDS != value))
				{
					this.OnTanggalCDSChanging(value);
					this.SendPropertyChanging();
					this._TanggalCDS = value;
					this.SendPropertyChanged("TanggalCDS");
					this.OnTanggalCDSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCProposedReport_TM")]
	public partial class QCProposedReport_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProposedReport;
		
		private string _IDBRD;
		
		private string _ReportTittle;
		
		private string _ReportType;
		
		private string _FilterType;
		
		private string _Information;
		
		private string _SourceOfField;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProposedReportChanging(int value);
    partial void OnIDProposedReportChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    partial void OnReportTittleChanging(string value);
    partial void OnReportTittleChanged();
    partial void OnReportTypeChanging(string value);
    partial void OnReportTypeChanged();
    partial void OnFilterTypeChanging(string value);
    partial void OnFilterTypeChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnSourceOfFieldChanging(string value);
    partial void OnSourceOfFieldChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public QCProposedReport_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProposedReport", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDProposedReport
		{
			get
			{
				return this._IDProposedReport;
			}
			set
			{
				if ((this._IDProposedReport != value))
				{
					this.OnIDProposedReportChanging(value);
					this.SendPropertyChanging();
					this._IDProposedReport = value;
					this.SendPropertyChanged("IDProposedReport");
					this.OnIDProposedReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTittle", DbType="VarChar(100)")]
		public string ReportTittle
		{
			get
			{
				return this._ReportTittle;
			}
			set
			{
				if ((this._ReportTittle != value))
				{
					this.OnReportTittleChanging(value);
					this.SendPropertyChanging();
					this._ReportTittle = value;
					this.SendPropertyChanged("ReportTittle");
					this.OnReportTittleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportType", DbType="VarChar(50)")]
		public string ReportType
		{
			get
			{
				return this._ReportType;
			}
			set
			{
				if ((this._ReportType != value))
				{
					this.OnReportTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportType = value;
					this.SendPropertyChanged("ReportType");
					this.OnReportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterType", DbType="VarChar(100)")]
		public string FilterType
		{
			get
			{
				return this._FilterType;
			}
			set
			{
				if ((this._FilterType != value))
				{
					this.OnFilterTypeChanging(value);
					this.SendPropertyChanging();
					this._FilterType = value;
					this.SendPropertyChanged("FilterType");
					this.OnFilterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="VarChar(500)")]
		public string Information
		{
			get
			{
				return this._Information;
			}
			set
			{
				if ((this._Information != value))
				{
					this.OnInformationChanging(value);
					this.SendPropertyChanging();
					this._Information = value;
					this.SendPropertyChanged("Information");
					this.OnInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOfField", DbType="VarChar(50)")]
		public string SourceOfField
		{
			get
			{
				return this._SourceOfField;
			}
			set
			{
				if ((this._SourceOfField != value))
				{
					this.OnSourceOfFieldChanging(value);
					this.SendPropertyChanging();
					this._SourceOfField = value;
					this.SendPropertyChanged("SourceOfField");
					this.OnSourceOfFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(100)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCRequirement_TM")]
	public partial class QCRequirement_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRequirement;
		
		private string _IDBRD;
		
		private string _BusReqID;
		
		private string _BusReqDesc;
		
		private string _ResponsibleBisUnit;
		
		private string _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRequirementChanging(int value);
    partial void OnIDRequirementChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    partial void OnBusReqIDChanging(string value);
    partial void OnBusReqIDChanged();
    partial void OnBusReqDescChanging(string value);
    partial void OnBusReqDescChanged();
    partial void OnResponsibleBisUnitChanging(string value);
    partial void OnResponsibleBisUnitChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public QCRequirement_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRequirement", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRequirement
		{
			get
			{
				return this._IDRequirement;
			}
			set
			{
				if ((this._IDRequirement != value))
				{
					this.OnIDRequirementChanging(value);
					this.SendPropertyChanging();
					this._IDRequirement = value;
					this.SendPropertyChanged("IDRequirement");
					this.OnIDRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusReqID", DbType="VarChar(10)")]
		public string BusReqID
		{
			get
			{
				return this._BusReqID;
			}
			set
			{
				if ((this._BusReqID != value))
				{
					this.OnBusReqIDChanging(value);
					this.SendPropertyChanging();
					this._BusReqID = value;
					this.SendPropertyChanged("BusReqID");
					this.OnBusReqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusReqDesc", DbType="VarChar(MAX)")]
		public string BusReqDesc
		{
			get
			{
				return this._BusReqDesc;
			}
			set
			{
				if ((this._BusReqDesc != value))
				{
					this.OnBusReqDescChanging(value);
					this.SendPropertyChanging();
					this._BusReqDesc = value;
					this.SendPropertyChanged("BusReqDesc");
					this.OnBusReqDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleBisUnit", DbType="VarChar(500)")]
		public string ResponsibleBisUnit
		{
			get
			{
				return this._ResponsibleBisUnit;
			}
			set
			{
				if ((this._ResponsibleBisUnit != value))
				{
					this.OnResponsibleBisUnitChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleBisUnit = value;
					this.SendPropertyChanged("ResponsibleBisUnit");
					this.OnResponsibleBisUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(10)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCRole_TM")]
	public partial class QCRole_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRole;
		
		private string _NamaRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRoleChanging(int value);
    partial void OnIDRoleChanged();
    partial void OnNamaRoleChanging(string value);
    partial void OnNamaRoleChanged();
    #endregion
		
		public QCRole_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRole
		{
			get
			{
				return this._IDRole;
			}
			set
			{
				if ((this._IDRole != value))
				{
					this.OnIDRoleChanging(value);
					this.SendPropertyChanging();
					this._IDRole = value;
					this.SendPropertyChanged("IDRole");
					this.OnIDRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaRole", DbType="VarChar(50)")]
		public string NamaRole
		{
			get
			{
				return this._NamaRole;
			}
			set
			{
				if ((this._NamaRole != value))
				{
					this.OnNamaRoleChanging(value);
					this.SendPropertyChanging();
					this._NamaRole = value;
					this.SendPropertyChanged("NamaRole");
					this.OnNamaRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCSecurityBackUp_TM")]
	public partial class QCSecurityBackUp_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSecurityBackUp;
		
		private string _BusinessReqID;
		
		private string _SecurityReq;
		
		private string _ApplyBusReq;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSecurityBackUpChanging(int value);
    partial void OnIDSecurityBackUpChanged();
    partial void OnBusinessReqIDChanging(string value);
    partial void OnBusinessReqIDChanged();
    partial void OnSecurityReqChanging(string value);
    partial void OnSecurityReqChanged();
    partial void OnApplyBusReqChanging(string value);
    partial void OnApplyBusReqChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCSecurityBackUp_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSecurityBackUp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSecurityBackUp
		{
			get
			{
				return this._IDSecurityBackUp;
			}
			set
			{
				if ((this._IDSecurityBackUp != value))
				{
					this.OnIDSecurityBackUpChanging(value);
					this.SendPropertyChanging();
					this._IDSecurityBackUp = value;
					this.SendPropertyChanged("IDSecurityBackUp");
					this.OnIDSecurityBackUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessReqID", DbType="VarChar(10)")]
		public string BusinessReqID
		{
			get
			{
				return this._BusinessReqID;
			}
			set
			{
				if ((this._BusinessReqID != value))
				{
					this.OnBusinessReqIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessReqID = value;
					this.SendPropertyChanged("BusinessReqID");
					this.OnBusinessReqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityReq", DbType="VarChar(100)")]
		public string SecurityReq
		{
			get
			{
				return this._SecurityReq;
			}
			set
			{
				if ((this._SecurityReq != value))
				{
					this.OnSecurityReqChanging(value);
					this.SendPropertyChanging();
					this._SecurityReq = value;
					this.SendPropertyChanged("SecurityReq");
					this.OnSecurityReqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyBusReq", DbType="VarChar(100)")]
		public string ApplyBusReq
		{
			get
			{
				return this._ApplyBusReq;
			}
			set
			{
				if ((this._ApplyBusReq != value))
				{
					this.OnApplyBusReqChanging(value);
					this.SendPropertyChanging();
					this._ApplyBusReq = value;
					this.SendPropertyChanged("ApplyBusReq");
					this.OnApplyBusReqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCSolution_TM")]
	public partial class QCSolution_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSolution;
		
		private string _HandlesBRID;
		
		private string _FlowGambar;
		
		private string _FlowTulisan;
		
		private string _TableReference;
		
		private string _SPReference;
		
		private string _Client;
		
		private string _TibcoServices;
		
		private string _Simulation;
		
		private string _IDFSD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSolutionChanging(int value);
    partial void OnIDSolutionChanged();
    partial void OnHandlesBRIDChanging(string value);
    partial void OnHandlesBRIDChanged();
    partial void OnFlowGambarChanging(string value);
    partial void OnFlowGambarChanged();
    partial void OnFlowTulisanChanging(string value);
    partial void OnFlowTulisanChanged();
    partial void OnTableReferenceChanging(string value);
    partial void OnTableReferenceChanged();
    partial void OnSPReferenceChanging(string value);
    partial void OnSPReferenceChanged();
    partial void OnClientChanging(string value);
    partial void OnClientChanged();
    partial void OnTibcoServicesChanging(string value);
    partial void OnTibcoServicesChanged();
    partial void OnSimulationChanging(string value);
    partial void OnSimulationChanged();
    partial void OnIDFSDChanging(string value);
    partial void OnIDFSDChanged();
    #endregion
		
		public QCSolution_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSolution", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSolution
		{
			get
			{
				return this._IDSolution;
			}
			set
			{
				if ((this._IDSolution != value))
				{
					this.OnIDSolutionChanging(value);
					this.SendPropertyChanging();
					this._IDSolution = value;
					this.SendPropertyChanged("IDSolution");
					this.OnIDSolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlesBRID", DbType="VarChar(50)")]
		public string HandlesBRID
		{
			get
			{
				return this._HandlesBRID;
			}
			set
			{
				if ((this._HandlesBRID != value))
				{
					this.OnHandlesBRIDChanging(value);
					this.SendPropertyChanging();
					this._HandlesBRID = value;
					this.SendPropertyChanged("HandlesBRID");
					this.OnHandlesBRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowGambar", DbType="VarChar(MAX)")]
		public string FlowGambar
		{
			get
			{
				return this._FlowGambar;
			}
			set
			{
				if ((this._FlowGambar != value))
				{
					this.OnFlowGambarChanging(value);
					this.SendPropertyChanging();
					this._FlowGambar = value;
					this.SendPropertyChanged("FlowGambar");
					this.OnFlowGambarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowTulisan", DbType="VarChar(MAX)")]
		public string FlowTulisan
		{
			get
			{
				return this._FlowTulisan;
			}
			set
			{
				if ((this._FlowTulisan != value))
				{
					this.OnFlowTulisanChanging(value);
					this.SendPropertyChanging();
					this._FlowTulisan = value;
					this.SendPropertyChanged("FlowTulisan");
					this.OnFlowTulisanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableReference", DbType="VarChar(500)")]
		public string TableReference
		{
			get
			{
				return this._TableReference;
			}
			set
			{
				if ((this._TableReference != value))
				{
					this.OnTableReferenceChanging(value);
					this.SendPropertyChanging();
					this._TableReference = value;
					this.SendPropertyChanged("TableReference");
					this.OnTableReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPReference", DbType="VarChar(500)")]
		public string SPReference
		{
			get
			{
				return this._SPReference;
			}
			set
			{
				if ((this._SPReference != value))
				{
					this.OnSPReferenceChanging(value);
					this.SendPropertyChanging();
					this._SPReference = value;
					this.SendPropertyChanged("SPReference");
					this.OnSPReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="VarChar(500)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TibcoServices", DbType="VarChar(MAX)")]
		public string TibcoServices
		{
			get
			{
				return this._TibcoServices;
			}
			set
			{
				if ((this._TibcoServices != value))
				{
					this.OnTibcoServicesChanging(value);
					this.SendPropertyChanging();
					this._TibcoServices = value;
					this.SendPropertyChanged("TibcoServices");
					this.OnTibcoServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Simulation", DbType="VarChar(MAX)")]
		public string Simulation
		{
			get
			{
				return this._Simulation;
			}
			set
			{
				if ((this._Simulation != value))
				{
					this.OnSimulationChanging(value);
					this.SendPropertyChanging();
					this._Simulation = value;
					this.SendPropertyChanged("Simulation");
					this.OnSimulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFSD", DbType="VarChar(10)")]
		public string IDFSD
		{
			get
			{
				return this._IDFSD;
			}
			set
			{
				if ((this._IDFSD != value))
				{
					this.OnIDFSDChanging(value);
					this.SendPropertyChanging();
					this._IDFSD = value;
					this.SendPropertyChanged("IDFSD");
					this.OnIDFSDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCStakeholder_TM")]
	public partial class QCStakeholder_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStakeholder;
		
		private string _Stakerholder;
		
		private string _Implication;
		
		private string _IDBRD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStakeholderChanging(int value);
    partial void OnIDStakeholderChanged();
    partial void OnStakerholderChanging(string value);
    partial void OnStakerholderChanged();
    partial void OnImplicationChanging(string value);
    partial void OnImplicationChanged();
    partial void OnIDBRDChanging(string value);
    partial void OnIDBRDChanged();
    #endregion
		
		public QCStakeholder_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStakeholder", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDStakeholder
		{
			get
			{
				return this._IDStakeholder;
			}
			set
			{
				if ((this._IDStakeholder != value))
				{
					this.OnIDStakeholderChanging(value);
					this.SendPropertyChanging();
					this._IDStakeholder = value;
					this.SendPropertyChanged("IDStakeholder");
					this.OnIDStakeholderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stakerholder", DbType="VarChar(100)")]
		public string Stakerholder
		{
			get
			{
				return this._Stakerholder;
			}
			set
			{
				if ((this._Stakerholder != value))
				{
					this.OnStakerholderChanging(value);
					this.SendPropertyChanging();
					this._Stakerholder = value;
					this.SendPropertyChanged("Stakerholder");
					this.OnStakerholderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Implication", DbType="VarChar(500)")]
		public string Implication
		{
			get
			{
				return this._Implication;
			}
			set
			{
				if ((this._Implication != value))
				{
					this.OnImplicationChanging(value);
					this.SendPropertyChanging();
					this._Implication = value;
					this.SendPropertyChanged("Implication");
					this.OnImplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBRD", DbType="VarChar(10)")]
		public string IDBRD
		{
			get
			{
				return this._IDBRD;
			}
			set
			{
				if ((this._IDBRD != value))
				{
					this.OnIDBRDChanging(value);
					this.SendPropertyChanging();
					this._IDBRD = value;
					this.SendPropertyChanged("IDBRD");
					this.OnIDBRDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QCUser_TM")]
	public partial class QCUser_TM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUser;
		
		private string _NamaUser;
		
		private string _NIK;
		
		private System.Nullable<int> _IDLOB;
		
		private string _Pass;
		
		private string _LoginID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnNamaUserChanging(string value);
    partial void OnNamaUserChanged();
    partial void OnNIKChanging(string value);
    partial void OnNIKChanged();
    partial void OnIDLOBChanging(System.Nullable<int> value);
    partial void OnIDLOBChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    #endregion
		
		public QCUser_TM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaUser", DbType="VarChar(50)")]
		public string NamaUser
		{
			get
			{
				return this._NamaUser;
			}
			set
			{
				if ((this._NamaUser != value))
				{
					this.OnNamaUserChanging(value);
					this.SendPropertyChanging();
					this._NamaUser = value;
					this.SendPropertyChanged("NamaUser");
					this.OnNamaUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIK", DbType="VarChar(5)")]
		public string NIK
		{
			get
			{
				return this._NIK;
			}
			set
			{
				if ((this._NIK != value))
				{
					this.OnNIKChanging(value);
					this.SendPropertyChanging();
					this._NIK = value;
					this.SendPropertyChanged("NIK");
					this.OnNIKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOB", DbType="Int")]
		public System.Nullable<int> IDLOB
		{
			get
			{
				return this._IDLOB;
			}
			set
			{
				if ((this._IDLOB != value))
				{
					this.OnIDLOBChanging(value);
					this.SendPropertyChanging();
					this._IDLOB = value;
					this.SendPropertyChanged("IDLOB");
					this.OnIDLOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="VarChar(50)")]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
